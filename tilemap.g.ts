// 自动生成的代码。请勿编辑。
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "default":
            case "级别1":return tiles.createTilemap(hex``, img`
................................................
................................................
................................................
................................................
................................................
................................................
................................................
................................................
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.swamp.swampTile1,sprites.castle.tileGrass1,sprites.swamp.swampTile0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// 自动生成的代码。请勿编辑。
